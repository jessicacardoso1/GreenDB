# Direitos autorais (c) 2021-2023, Adel Noureddine, Université de Pau et des Pays de l'Adour.
# Todos os direitos reservados. Este programa e os materiais acompanhantes
# estão disponíveis nos termos da
# Licença Pública Geral GNU v3.0 apenas (GPL-3.0-apenas)
# que acompanha esta distribuição, e está disponível em
# https://www.gnu.org/licenses/gpl-3.0.en.html
#
# Autor: Adel Noureddine

# Obtenha também a potência e a energia para métodos que começam com este nome de pacote.class.method
# Exemplo: filter-method-names=Pacote para filtrar a energia de todos os métodos cujo nome completo começa com Pacote
# Observe que o JoularJX sempre gerará energia para todos os métodos não filtrados em um arquivo separado
# Portanto, você pode mantê-lo vazio com segurança se não quiser filtrar métodos
# Você pode adicionar vários nomes de identificadores separados por vírgula, ordenados por prioridade
# O JoularJX monitorará e filtrará métodos para todos esses pacotes
# Exemplo: filter-method-names=Pacote,Pacote2,Pacote3
filter-method-names=greendb

# Escreva o consumo de energia de tempo de execução dos métodos em um arquivo CSV
# Definir esta opção como false não gerará nenhum arquivo de dados de tempo de execução
# Valores permitidos: true, false
save-runtime-data=false

# Sobrescrever arquivo de dados de energia de tempo de execução
# Definir como false escreverá arquivos para cada ciclo de monitoramento (1 segundo por ciclo)
# Valores permitidos: true, false
overwrite-runtime-data=false

# Nível de registro
# Configure como OFF para desativá-lo
# Valores permitidos: OFF, INFO, WARNING, SEVERE
logger-level=INFO

# Acompanhe a evolução do consumo de energia dos métodos
# Definir esta opção como true gerará um arquivo CSV para cada método monitorado
# Cada arquivo CSV conterá o consumo de energia em cada carimbo de data/hora monitorado
# Valores permitidos: true, false
track-consumption-evolution=false

# Se track-consumption-evolution estiver definido como true, os arquivos CSV serão armazenados no caminho fornecido
# No Windows, escape barras duas vezes, por favor
evolution-data-path=false

# Se ativado (true), o consumo dos métodos relacionados a qualquer uma das threads do agente não será relatado.
# Valores permitidos: true , false
hide-agent-consumption=true

# Se definido como true, um arquivo CSV será gerado no final do agente, contendo o consumo total de energia de cada árvore de chamadas.
# Valores permitidos: true, false
enable-call-trees-consumption=false

# Escreva o consumo de energia de árvores de chamadas em tempo de execução em um arquivo CSV.
# Por padrão, um novo arquivo CSV será gerado para cada ciclo de monitoramento.
# Definir esta opção como false não gerará nenhum arquivo de dados de tempo de execução
# Valores permitidos: true, false
save-call-trees-runtime-data=false

# Sobrescrever arquivo de dados de energia de árvores de chamadas em tempo de execução. Se definido como true, apenas um arquivo de tempo de execução será gerado e ele será sobrescrito para cada ciclo de monitoramento.
# Definir como false gerará novos arquivos para cada ciclo de monitoramento (1 segundo por ciclo). Os referidos arquivos incluirão carimbos de data/hora em seus nomes.
# Valores permitidos: true, false
overwrite-call-trees-runtime-data=false

# Caminho para o nosso programa de monitoramento de energia no Windows
# No Windows, por favor, escape as barras duas vezes
#powermonitor-path=C:\\joularjx\\PowerMonitor.exe

